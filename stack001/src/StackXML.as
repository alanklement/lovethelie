package {	import flash.display.Loader;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.net.URLLoader;	import flash.net.URLRequest;	public class StackXML extends EventDispatcher {		private var _xmlArray : Array ;		private var _file : String ;		private var _xmlThumbID : String  ;		private var _xmlImgID : String  ;		private var _storyNum : int = -1 ;		public function set xml($url : String) : void {			_file = $url;		}		public function set story($story : uint) : void {			_storyNum = $story;		}		public function set xmlThumbID($id : String) : void {			_xmlThumbID = $id;		}		public function set xmlImgID($id : String) : void {			_xmlImgID = $id;		}		public function get images() : Array {			return _xmlArray;		}		public function StackXML() {		}		public function load() : void {			if ( _file == null ) {				throw new Error("Error: Set a URL for the XML file.");			}			if ( _storyNum == -1 ) {				throw new Error("Error: Set a story number ( xml node ) to load.")			}			var xmlLoader = new URLLoader() ;			xmlLoader.addEventListener(Event.COMPLETE, xmlLoaded) ;			xmlLoader.load(new URLRequest(_file));		}		private function xmlLoaded($evt : Event) : void {			$evt.target.removeEventListener(Event.COMPLETE, xmlLoaded) ;			_xmlArray = new Array() ;			var xml = XML($evt.target.data) ;			var xmlList = xml..story [ _storyNum ].children() ;			var i : uint = 0 ;			var l : uint = xmlList.length() ;			for ( i ; i < l ; i++ ) {				var imageLoader = new Loader()				imageLoader.load(new URLRequest(xmlList[i].attribute(_xmlThumbID)))				imageLoader.name = xmlList [ i ].attribute(_xmlImgID) ;				_xmlArray.push(imageLoader) ;			}			if ( i == l) {				dispatchEvent(new Event(Event.COMPLETE))  ;			} else {				throw new Error("Error: Images did not all load correctly.")			}		}	}}